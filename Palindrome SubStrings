Given a string s, count all palindromic sub-strings present in the string. The length of the palindromic sub-string must be greater than or equal to 2. 

Examples

Input: s = "abaab"
Output: 3
Explanation: All palindromic substrings are : "aba" , "aa" , "baab".
Input: s = "aaa"
Output: 3
Explanation: All palindromic substrings are : "aa", "aa", "aaa".
Input: s = "abbaeae"
Output: 4
Explanation: All palindromic substrings are : "bb" , "abba" , "aea", "eae".
Constraints:
2 ≤ s.size() ≤ 103
string contains only lowercase english characters

class Solution {
    public int countPS(String s) {
        int n = s.length();
        int count= 0; 
      for(int i=0;i<n;i++){
           count+= isPalindrome(s,i,i,n);
           count+=isPalindrome(s,i,i+1,n);
      }
      return count;
    }
     private static int isPalindrome(String s , int i , int j,int n){
        int count =0;
        while(i >=0 && j < n){
            if(s.charAt(i)!=s.charAt(j)){
                break;
            }
           if(j-i+1 >=2)  count++;
            i--;
            j++;
        }
        return count;
    }
}
